apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-deployment
  template:
    metadata:
      labels:
        app: backend-deployment
    spec:
      containers:
      - name: backend-deployment
        image: achoistic98/ccs_backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: database-service:3306
        - name: ORIGIN
          value: "http://frontend-service:3000"
        - name: DB_PASSWORD
          value: "password"
        - name: DB_NAME
          value: "chatdb"
        - name: DB_USER
          value: "root"
        - name: FILE_LOCATION
          value: "localhost:8080/assets"



apiVersion: networking.k8s.io/v1
kind: Ingress
          metadata:
  name: css-rules
spec:
  rules:
    - host: ccs-lb-430697055.ap-northeast-2.elb.amazonaws.com
      http:
        paths:
        - path: /
          backend:
            service:
              name: frontend-service
              port:
                number: 80
    - host: ccs-lb-430697055.ap-northeast-2.elb.amazonaws.com
      http:
        paths:
        - path: /api
          backend:
            serivce:
              name: backend-service
              port:
                number: 80




apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx-ingress-controller
  labels:
    k8s-app: nginx-lb
spec:
  replicas: 1
  selector:
    k8s-app: nginx-lb
  template:
    metadata:
      labels:
        k8s-app: nginx-lb
      name: nginx-ingress-controller
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - image: gcr.io/google_containers/nginx-ingress-controller:0.8.3
          name: nginx-lb
          imagePullPolicy: Always
          env:
            - name: POD_NAME
            